{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/edit/edit.component.css","webpack:///./src/app/edit/edit.component.html","webpack:///./src/app/edit/edit.component.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/http.service.ts","webpack:///./src/app/new/new.component.css","webpack:///./src/app/new/new.component.html","webpack:///./src/app/new/new.component.ts","webpack:///./src/app/newquote/newquote.component.css","webpack:///./src/app/newquote/newquote.component.html","webpack:///./src/app/newquote/newquote.component.ts","webpack:///./src/app/view/view.component.css","webpack:///./src/app/view/view.component.html","webpack:///./src/app/view/view.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HomeComponent } from './home/home.component';\nimport { NewComponent } from './new/new.component';\nimport { EditComponent } from './edit/edit.component';\nimport { ViewComponent } from './view/view.component';\nimport { NewquoteComponent } from './newquote/newquote.component';\nimport {Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes =[\n  { path: '', component: HomeComponent},\n  { path: 'new', component: NewComponent},\n  { path: 'edit/:id', component: EditComponent},\n  { path: 'quotes/:id', component: ViewComponent},\n  { path: 'write/:id', component: NewquoteComponent},\n  { path: '**', component: HomeComponent},\n]\n@NgModule({\n  imports: [RouterModule.forRoot(routes), CommonModule],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\"","module.exports = \"<router-outlet></router-outlet>\\n\"","import { Component, OnInit } from '@angular/core';\n// import { AuthorService } from './author.service';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  title='app';\n  constructor(\n    private _route: ActivatedRoute,\n    private _router: Router\n  ) {}\n  ngOnInit() {\n  }\n}\n\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {HttpClientModule} from '@angular/common/http';\nimport {HttpService} from './http.service';\nimport { AppComponent } from './app.component';\nimport { FormsModule} from '@angular/forms';\nimport { AppRoutingModule } from './/app-routing.module';\nimport { HomeComponent } from './home/home.component';\nimport { EditComponent } from './edit/edit.component';\nimport { NewComponent } from './new/new.component';\nimport { ViewComponent } from './view/view.component';\nimport { NewquoteComponent } from './newquote/newquote.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    EditComponent,\n    NewComponent,\n    ViewComponent,\n    NewquoteComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule\n  ],\n  providers: [HttpService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row justify-content-md-center\\\">\\n      <h1 class=\\\"mt-4\\\">{{ Header }}</h1>\\n  </div>\\n  <div class=\\\"row justify-content-md-center\\\">\\n      <a href=\\\"#\\\" routerLink= \\\"/\\\">Home</a>\\n  </div>\\n  <div class=\\\"row justify-content-md-center\\\">\\n      <p>Edit this Author</p>\\n  </div>\\n  <div class=\\\"row justify-content-md-center\\\">\\n      <div *ngIf =\\\"updateAuthor\\\">\\n      <form (submit) =\\\"onUpdateAuthorClick(updateAuthor._id)\\\">\\n          <p>Name: <input type=\\\"text\\\" \\n            name = \\\"updateAuthor.name\\\" \\n            required\\n            minlength=\\\"3\\\"\\n            [(ngModel)] = \\\"updateAuthor.name\\\"\\n            value ={{updateAuthor.name}}\\n            #name=\\\"ngModel\\\"/></p>\\n          <div class=\\\"text-danger\\\" *ngIf = \\\"!name.valid\\\"><p>Name is required</p></div>\\n          <div class=\\\"text-danger\\\" *ngIf = \\\"editError\\\"><p>{{editError.name.message}}</p></div>\\n          <div class=\\\"row justify-content-md-center ml-4\\\">\\n            <div class=\\\"col-md-6\\\">\\n                <button class=\\\"btn btn-success\\\" [disabled] = \\\"!name.valid\\\" type=\\\"submit\\\">SUBMIT</button>\\n            </div>\\n            <div class=\\\"col-md-6\\\">\\n                <button class=\\\"btn btn-success\\\" routerLink=\\\"/\\\">CANCEL</button>\\n            </div>\\n          </div>\\n      </form>\\n  </div>\\n</div>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { HttpService } from '../http.service';\nimport { Router, ActivatedRoute, Params } from '@angular/router'\n\n@Component({\n  selector: 'app-edit',\n  templateUrl: './edit.component.html',\n  styleUrls: ['./edit.component.css']\n})\nexport class EditComponent implements OnInit {\n  Header ='Favorite Authors';\n  constructor(\n    private _httpService: HttpService,\n    private _router: Router,\n    private _route: ActivatedRoute,\n  ) { }\n  updateAuthor: any;\n  editError;\n\n  ngOnInit() {\n    this._route.params.subscribe((params: Params)=> {\n       this.getOneAuthor(params['id']);\n    })\n  }\n  \n  getOneAuthor(id){\n    let oneAuthorObservable = this._httpService.oneAuthor(id);\n    oneAuthorObservable.subscribe(data =>{\n      console.log(\"Get one author\", data);\n      this.updateAuthor = data;\n    })\n\n  }\n\n  onUpdateAuthorClick(id){\n    console.log(\"i am in the update\");\n    let editAuthorsObservable = this._httpService.editAuthor(id, this.updateAuthor);\n    editAuthorsObservable.subscribe(data => {\n    console.log(data, \"updateAuthor\");\n        if(data['errors']){\n          this.editError = data['errors'];\n          console.log(this.editError, \"One errormessage\");\n        }\n        else {\n          this._router.navigate(['/']);\n        }\n    })\n  }\n}\n","module.exports = \".table-striped{\\n    font-family: arial, sans-serif;\\n    border-collapse: collapse;\\n    width: 60%;\\n}\\n\\ntd{\\n    border: 1px solid #dddddd;\\n    text-align: left;\\n    padding: 2px;\\n}\\n\\ntr:nth-child(even) {\\n    background-color: #dddddd;\\n}\"","module.exports = \"<div class=\\\"container\\\">\\n    <div class=\\\"row justify-content-md-center\\\">\\n        <h1 class=\\\"mt-4\\\">{{ Header }}</h1>\\n    </div>\\n    <div class=\\\"row justify-content-md-center\\\">\\n        <a [routerLink]= \\\"['/new']\\\">Add a quotable author</a>\\n    </div>\\n    <div class=\\\"row justify-content-md-center\\\">\\n        <p>We have quotes by:</p>\\n    </div>\\n    <div *ngIf = \\\"allAuthors\\\">\\n    <div class=\\\"row justify-content-md-center\\\">\\n        <table class=\\\"table table-striped table-bordered\\\">\\n            <tr>\\n                <th>Authors</th>\\n                <th class=\\\"text-center\\\">Action Available</th>\\n            </tr>\\n            <tr *ngFor = \\\"let author of allAuthors\\\" >\\n                <td>{{author.name}}</td>\\n                <td>\\n                    <button class=\\\"btn btn-success ml-3 text-center\\\" [routerLink] = \\\"['/quotes' ,author._id]\\\">View quotes</button>\\n                    <button class=\\\"btn btn-info ml-3\\\" [routerLink] = \\\"['/edit', author._id]\\\">Edit</button>            \\n                </td>\\n            </tr>\\n        </table>  \\n    </div>\\n</div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { HttpService } from '../http.service';\nimport { Router } from '@angular/router'\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n  Header ='Quote Ranks';\n   allAuthors;\n   oneQuote;\n   constructor(\n    private _router: Router,\n    private _httpService: HttpService,\n  ) {}\n\n  ngOnInit() {\n    this.getAuthors();\n  }\n\n  getAuthors(){\n    let getAuthorsObservable = this._httpService.getAuthor()\n    getAuthorsObservable.subscribe(data =>{ \n      console.log(\"Displayed all data\", data);\n      this.allAuthors = data;\n    })\n  }\n\n  // getQuotes(id){\n  //   let getQuotesObservable = this._httpService.getQuote(id)\n  //   getQuotesObservable.subscribe(data =>{\n  //     console.log(\"One quote\",data);\n  //     this.oneQuote = data;\n  //   })\n\n  // }\n  \n  // destroyAuthor(id){\n  //   let delAuthorsObservable = this._httpService.deleteAuthor(id)\n  //   delAuthorsObservable.subscribe(data => {\n  //     console.log(\"Deleted one author\", data);\n  //   })\n  //   this.getAuthors() // Call the updated set of data after deletion without refreshing the page\n  // }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpService {\n  constructor(private _http: HttpClient) { }\n\n  getAuthor(){\n    return this._http.get('/authors');\n  }\n  postAuthor(newAuthors){\n    return this._http.post('/newauthor',newAuthors);\n  }\n\n  deleteAuthor(id){\n    return this._http.delete('/newauthor/'+ id + '');\n  }\n\n  editAuthor(id:String, updateAuthor){\n    return this._http.put('/newauthor/'+ id + '',updateAuthor);\n  }\n\n  oneAuthor(id:String){\n    console.log(\"service\", id);\n    return this._http.get('/oneauthor/'+id+'');\n  }\n\n  createQuote(id:String, newQuote){\n    return this._http.post('/newquote/'+ id +'', newQuote);\n  }\n\n  deleteQuote(id:String, delquote: String){\n    console.log(\"I'm in the service\");\n    return this._http.delete('/newquote/'+ id + \"/\" + delquote);\n  }\n  \n  voteQuote(id: String,  quote){\n    console.log(\"I am in service\");\n    return this._http.post('/updatevote/'+ id, quote);\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row justify-content-md-center\\\">\\n      <h1 class=\\\"mt-4\\\">{{ Header }}</h1>\\n  </div>\\n  <div class=\\\"row justify-content-md-center\\\">\\n      <a href=\\\"#\\\" routerLink= \\\"/\\\">Home</a>\\n  </div>\\n  <div class=\\\"row justify-content-md-center\\\">\\n      <p>Add a new quotable author</p>\\n  </div>\\n  <div class=\\\"row justify-content-md-center\\\">\\n      <form (submit) =\\\"onCreateAuthorClick()\\\">\\n          <p>Name: <input type=\\\"text\\\" \\n                          name = \\\"newAuthors.name\\\" \\n                          required\\n                          minlength=\\\"3\\\"\\n                          [(ngModel)] = \\\"newAuthors.name\\\"\\n                          #name=\\\"ngModel\\\" \\n                    /></p>\\n          <div class=\\\"text-danger\\\" *ngIf = \\\"!name.untouched\\\"><p>Name is required</p></div>\\n          <div class=\\\"text-danger\\\" *ngIf = \\\"error\\\"><p>{{error.name.message}}</p></div>\\n          <div class=\\\"row justify-content-md-center ml-4\\\">\\n            <div class=\\\"col-md-6\\\">\\n                <button class=\\\"btn btn-success\\\" routerLink=\\\"/\\\">CANCEL</button>\\n            </div>\\n            <div class=\\\"col-md-6\\\">\\n                <button class=\\\"btn btn-success\\\" [disabled] = \\\"!name.valid\\\" type=\\\"submit\\\">SUBMIT</button>\\n            </div>\\n          </div>\\n      </form>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { HttpService } from '../http.service';\nimport { Router } from '@angular/router'\n\n@Component({\n  selector: 'app-new',\n  templateUrl: './new.component.html',\n  styleUrls: ['./new.component.css']\n})\nexport class NewComponent implements OnInit {\nHeader = 'Quote Ranks';\nnewAuthors: any;\nerror;\n  constructor(\n    private _router: Router,\n    private _httpService: HttpService,\n  ) {\n    this.newAuthors = {name:\"\"};\n  }\n  \n  ngOnInit() {\n  }\n\n  onCreateAuthorClick(){\n    let createAuthorObservable = this._httpService.postAuthor(this.newAuthors);\n    createAuthorObservable.subscribe(data=>{\n    console.log(data);\n        if(data['errors']){\n          this.error = data['errors'];\n          console.log(this.error, \"One errormessage\");\n        }\n        else {\n          this._router.navigate(['/']);\n        }\n      })\n      \n  }\n}\n\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n    <div class=\\\"row justify-content-md-center\\\">\\n        <h1 class=\\\"mt-4\\\"> {{ Header }}</h1>\\n    </div>\\n    <div class=\\\"row justify-content-md-center\\\">\\n        <a [routerLink]= \\\"['/']\\\">Home</a>\\n    </div>\\n    <div *ngIf = \\\"oneQuote\\\" class=\\\"row justify-content-md-center\\\">\\n        <p>Provide a quote by: <strong>{{ oneQuote.name }}</strong></p>\\n    </div>\\n    <div class=\\\"row justify-content-md-center\\\" >\\n        <form (submit) =\\\"onCreateQuoteClick(oneQuote._id)\\\">\\n            <p>Quote: <input type=\\\"text\\\" \\n                            name = \\\"newQuote.quote\\\" \\n                            required\\n                            minlength=\\\"3\\\"\\n                            [(ngModel)] = \\\"newQuote.quote\\\"\\n                            #quote=\\\"ngModel\\\"/></p>\\n            <div class=\\\"text-danger\\\" *ngIf = \\\"!quote.untouched\\\"><p>Quote is required</p></div>\\n            <div class=\\\"text-danger\\\" *ngIf = \\\"quoteError\\\"><p>{{quoteError.quote.message}}</p></div>\\n            <div class=\\\"row justify-content-md-center ml-4\\\">\\n              <div *ngIf = \\\"oneQuote\\\" class=\\\"col-md-6\\\">\\n                  <button class=\\\"btn btn-success\\\" [routerLink]=\\\"['/quotes',oneQuote._id]\\\">CANCEL</button>\\n              </div> \\n              <div class=\\\"col-md-6\\\">\\n                  <button class=\\\"btn btn-success\\\" [disabled]=\\\"!quote.valid\\\" type=\\\"submit\\\">SUBMIT</button>\\n              </div>\\n            </div>\\n        </form>\\n    </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { HttpService } from '../http.service';\nimport { Router, ActivatedRoute, Params } from '@angular/router'\n\n@Component({\n  selector: 'app-newquote',\n  templateUrl: './newquote.component.html',\n  styleUrls: ['./newquote.component.css']\n})\nexport class NewquoteComponent implements OnInit {\n  Header ='Quote Ranks';\n  constructor(\n    private _httpService: HttpService,\n    private _router: Router,\n    private _route: ActivatedRoute, //ActivatedRoute service provides a params Observable \n                                  //which we can subscribe to  get the route parameters \n  ) { \n    this.newQuote = {quote:\"\"};\n  }\n  oneQuote: any;\n  newQuote;\n  quoteError;\n\n  ngOnInit() {\n    this._route.params.subscribe((params: Params)=> {\n       this.getOneAuthor(params['id']);\n    })\n   \n  }\n  \n  getOneAuthor(id){\n    let oneAuthorObservable = this._httpService.oneAuthor(id);\n    oneAuthorObservable.subscribe(data =>{\n      console.log(\"Get one author\", data);\n      this.oneQuote = data;\n    })\n  }\n\n  onCreateQuoteClick(id){\n    let createquoteObservable = this._httpService.createQuote(id, this.newQuote)\n    createquoteObservable.subscribe(data => {\n      console.log(data, \"saved quote\");\n        if(data['errors']){\n          this.quoteError = data['errors'];\n        }\n        else {\n          this._router.navigate(['/quotes',id]);\n        }\n    })\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n    <div class=\\\"row justify-content-md-center\\\">\\n        <h1 class=\\\"mt-4\\\">{{ Header }}</h1>\\n    </div>\\n    <div class=\\\"row text-right\\\">\\n       <div class=\\\"col-md-8\\\"></div>\\n       <div *ngIf = \\\"OneAuthor\\\" class=\\\"col-md-2\\\">\\n            <a routerLink= \\\"/write/{{OneAuthor._id}}\\\">Add a quote</a>\\n       </div>\\n       <div class=\\\"col-md-2\\\">\\n            <a [routerLink]= \\\"['/']\\\"> Home </a>\\n       </div>\\n    </div>\\n    <div *ngIf=\\\"OneAuthor\\\" class=\\\"row justify-content-md-start\\\">\\n        <p>Quotes by: <strong>{{OneAuthor.name}}</strong></p>\\n    </div> \\n    <div class=\\\"row justify-content-md-center\\\">\\n        <table *ngIf=\\\"OneAuthor\\\" class=\\\"table table-striped table-bordered\\\">\\n            <thead>\\n              <tr>\\n                <th scope=\\\"col\\\">Quotes</th>\\n                <th scope=\\\"col\\\">Votes</th>\\n                <th scope=\\\"col\\\">Action Available</th>\\n              </tr>\\n            </thead>\\n            <tbody>\\n                <tr *ngFor = \\\"let quote of OneAuthor.auth_quotes\\\" >\\n                  <td> {{quote.quote}} </td>\\n                  <td> {{quote.votes}}</td>\\n                  <td>\\n                      <button class=\\\"btn btn-success\\\" (click) = \\\"voteUp(quote._id)\\\">Vote up</button>\\n                      <button class=\\\"btn btn-info ml-3\\\" (click) = \\\"voteDown(quote._id)\\\">Vote down</button>\\n                      <button class=\\\"btn btn-danger ml-3\\\" (click) = \\\"destroyQuote(quote._id)\\\">Delete</button>\\n                  </td>\\n                </tr> \\n            </tbody>\\n          </table>\\n    </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { HttpService } from '../http.service';\nimport { Router, ActivatedRoute, Params } from '@angular/router'\n\n\n@Component({\n  selector: 'app-view',\n  templateUrl: './view.component.html',\n  styleUrls: ['./view.component.css']\n})\n\nexport class ViewComponent implements OnInit {\n  Header ='Quote Ranks';\n   constructor(\n    private _httpService: HttpService,\n    private _router: Router,\n    private _route: ActivatedRoute\n  ) {}\n\n   Id;\n   OneAuthor;\n\n  ngOnInit() {\n    this._route.params.subscribe((params: Params) => (this.Id = params['id']));\n    let author = this._httpService.oneAuthor(this.Id).subscribe(data => {\n      this.OneAuthor = data;\n    })\n  }\n  \n  voteUp(qId) {\n    console.log(\"I am in component.ts\");\n    let votes = this._httpService.voteQuote(this.OneAuthor._id,\n      { \"id\": qId, \"voteVal\": 1 }).subscribe(data => {\n        this.OneAuthor = data;\n      });\n\n  }\n\n  voteDown(qId) {\n    let votes = this._httpService.voteQuote(this.OneAuthor._id,\n      { \"id\": qId, \"voteVal\": -1 }).subscribe(data => {\n        this.OneAuthor = data;\n      });\n  }\n\n  destroyQuote(qId){\n    console.log(\"I'm in the view component.ts\");\n    let delAuthorsObservable = this._httpService.deleteQuote(this.OneAuthor._id, qId)\n    delAuthorsObservable.subscribe(data => {\n      console.log(\"Deleted one quote\", data);\n      this.OneAuthor = data; // Call the updated set of data after deletion without refreshing the page\n    })\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}